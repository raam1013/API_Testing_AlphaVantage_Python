{"name": "test_mytest_5_Without_API_Key", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "def test_mytest_5_Without_API_Key():\n    \n            API_URL = \"https://www.alphavantage.co/querY\"\n            symbols = ['IBM']\n    \n            for symbol in symbols:\n                    data = { \"function\": \"TIME_SERIES_INTRADAY\",\n                    \"symbol\": symbol,\n                    \"interval\" : \"60min\",\n                    \"datatype\": \"json\" }\n                    response = requests.get(API_URL, data)\n>                   data = response.json()\n\nGET_Requests\\test_Request_04.py:206: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv\\lib\\site-packages\\requests\\models.py:897: in json\n    return complexjson.loads(self.text, **kwargs)\n..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\json\\__init__.py:354: in loads\n    return _default_decoder.decode(s)\n..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\json\\decoder.py:339: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x0000006F4ADAB198>, s = '<h1>Not Found</h1><p>The requested URL /querY was not found on this server.</p>', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python36\\lib\\json\\decoder.py:357: JSONDecodeError"}, "start": 1610887757206, "stop": 1610887758505, "uuid": "bf8b7a04-efe2-4961-8029-d4754ffdbd6a", "historyId": "1b7d9c64cd2805ad216022bbb9cfb72e", "testCaseId": "bbd8a717810d70e03e8fa82b3fe9f5e9", "fullName": "GET_Requests.test_Request_04#test_mytest_5_Without_API_Key", "labels": [{"name": "parentSuite", "value": "GET_Requests"}, {"name": "suite", "value": "test_Request_04"}, {"name": "host", "value": "Lenovo"}, {"name": "thread", "value": "5604-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "GET_Requests.test_Request_04"}]}